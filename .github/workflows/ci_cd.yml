name: Frontend CI/CD

on:
  push:
    branches: [main, dev]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  integration:
    runs-on: ubuntu-latest
    env:
      GIT_SHA: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v2

      - name: Stylesheet check
        run: echo 'stylesheet check'

      - name: Build image
        run: docker build -t pcts-front .

      - name: Build yarn
        run: docker run pcts-front yarn build

      - name: Run tests
        run: docker run --volume ${PWD}/:/app pcts-front bash -c "yarn install && CI=false yarn coverage"

      - name: SonarCloud Report coverage
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy_dev:
    if: github.ref == 'refs/heads/dev'
    needs: integration
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME_DEV: ${{ 'pcts-frontend-dev' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Heroku
        run: |
          heroku container:login
          heroku container:push web -a $HEROKU_APP_NAME_DEV
          heroku container:release web -a $HEROKU_APP_NAME_DEV

  deploy_main:
    if: github.ref == 'refs/heads/main'
    needs: integration
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME_PROD: ${{ 'pcts-frontend-prod' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Heroku
        run: |
          heroku container:login
          heroku container:push web -a $HEROKU_APP_NAME_PROD
          heroku container:release web -a $HEROKU_APP_NAME_PROD
